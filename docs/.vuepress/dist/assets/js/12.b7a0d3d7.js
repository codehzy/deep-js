(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{562:function(v,_,t){v.exports=t.p+"assets/img/GC.1ffc1072.png"},563:function(v,_,t){v.exports=t.p+"assets/img/tag-remove.e8b9d17d.png"},580:function(v,_,t){"use strict";t.r(_);var a=t(10),s=Object(a.a)({},(function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h2",{attrs:{id:"javascript-内存管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-内存管理"}},[v._v("#")]),v._v(" JavaScript 内存管理")]),v._v(" "),a("h3",{attrs:{id:"_1、内存概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、内存概念"}},[v._v("#")]),v._v(" 1、内存概念")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("不管什么样的编程语言，在代码的执行过程中都是需要给它"),a("strong",[v._v("分配内存")]),v._v("的，不同的是某些编程语言需要我们自己手动的管理内存，某些编程语言会可以自动帮助我们管理内存")])]),v._v(" "),a("li",[a("p",[v._v("不管以什么样的方式来管理内存，内存的管理都会有如下的生命周期：")]),v._v(" "),a("ul",[a("li",[v._v("第一步：分配"),a("strong",[v._v("申请")]),v._v("你需要的内存（申请）")]),v._v(" "),a("li",[v._v("第二步：第二步：使用"),a("strong",[v._v("分配")]),v._v("的内存（存放一些东西，比如对象等）")]),v._v(" "),a("li",[v._v("第三步：不需要使用时，对其进行"),a("strong",[v._v("释放")]),v._v("；")])])]),v._v(" "),a("li",[a("p",[v._v("不同的编程语言对于第一步和第三步会有不同的实现：")]),v._v(" "),a("ul",[a("li",[v._v("手动管理内存：比如 C、C++，包括早期的 OC，都是需要手动来管理内存的申请和释放的（malloc 和 free 函数）；")]),v._v(" "),a("li",[v._v("自动管理内存：比如 Java、JavaScript、Python、Swift、Dart 等，它们有自动帮助我们管理内存；")])])])]),v._v(" "),a("h3",{attrs:{id:"_2、js-的内存管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、js-的内存管理"}},[v._v("#")]),v._v(" 2、JS 的内存管理")]),v._v(" "),a("h4",{attrs:{id:"_1-内存和垃圾回收器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-内存和垃圾回收器"}},[v._v("#")]),v._v(" 1.内存和垃圾回收器")]),v._v(" "),a("ul",[a("li",[v._v("JavaScript 会在定义变量时为我们分配内存")]),v._v(" "),a("li",[v._v("JavaScript 内存分配方式是一样吗？\n"),a("ul",[a("li",[v._v("JS 对于"),a("strong",[v._v("基本数据类型内存")]),v._v("的分配会在执行时，直接在"),a("strong",[v._v("栈")]),v._v("空间进行分配")]),v._v(" "),a("li",[v._v("JS 对于"),a("strong",[v._v("复杂数据类型内存")]),v._v("的分配会在"),a("strong",[v._v("堆内存")]),v._v("中开辟一块空间，并且将这块空间的"),a("strong",[v._v("指针")]),v._v("返回值变量引用；")])])]),v._v(" "),a("li",[v._v("现代的编程语言都是有自己的立即回收机制\n"),a("ul",[a("li",[v._v("JS 对于复杂数据类型内存的分配会在堆内存中开辟一块空间，并且将这块空间的指针返回值变量引用；")]),v._v(" "),a("li",[v._v("对于那些不再使用的对象，我们都称之为是垃圾，它需要被回收，以释放更多的内存空间；")]),v._v(" "),a("li",[v._v("而我们的语言运行环境，比如 Java 的运行环境 JVM，JavaScript 的运行环境 js 引擎都会内存垃圾回收器；")]),v._v(" "),a("li",[v._v("垃圾回收器我们也会简称为 GC，所以在很多地方你看到 GC 其实指的是垃圾回收器；")])])])]),v._v(" "),a("h4",{attrs:{id:"_2-垃圾回收器算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-垃圾回收器算法"}},[v._v("#")]),v._v(" 2. 垃圾回收器算法")]),v._v(" "),a("p",[a("strong",[v._v("2.1. GC - 引用计数")])]),v._v(" "),a("ul",[a("li",[v._v("当一个对象有一个引用指向它时，那么这个"),a("strong",[v._v("对象的引用就+1")]),v._v("，当一个对象的引用为 0 时，这个对象就可以被销毁掉")]),v._v(" "),a("li",[v._v("这个算法有一个很大的"),a("strong",[v._v("弊端")]),v._v("就是会产生"),a("strong",[v._v("循环引用")]),v._v(" "),a("img",{attrs:{src:t(562),alt:"GC"}})])]),v._v(" "),a("p",[a("strong",[v._v("2.2. GC - 标记清除")])]),v._v(" "),a("ul",[a("li",[v._v("这个算法是设置一个根对象（root object），垃圾回收器会定期从这个根开始，找所有从根开始有引用到的对象，对于哪些没有引用到的对象，就认为是不可用的对象；")]),v._v(" "),a("li",[v._v("这个算法可以很好的解决循环引用的问题")])]),v._v(" "),a("p",[a("img",{attrs:{src:t(563),alt:"标记清除"}})])])}),[],!1,null,null,null);_.default=s.exports}}]);